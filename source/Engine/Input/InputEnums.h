#pragma once

namespace Viper
{
	enum class ButtonState : std::uint32_t
	{
		Neutral,
		Pressed,
		Hold,
		Released
	};

	enum class Button : std::uint32_t
	{
		Key_Unknown,
		Key_Space,
		Key_Apostrophe,
		Key_Comma,
		Key_Minus,
		Key_Period,
		Key_Slash,
		Key_0,
		Key_1,
		Key_2,
		Key_3,
		Key_4,
		Key_5,
		Key_6,
		Key_7,
		Key_8,
		Key_9,
		Key_Semicolon,
		Key_Equal,
		Key_A,
		Key_B,
		Key_C,
		Key_D,
		Key_E,
		Key_F,
		Key_G,
		Key_H,
		Key_I,
		Key_J,
		Key_K,
		Key_L,
		Key_M,
		Key_N,
		Key_O,
		Key_P,
		Key_Q,
		Key_R,
		Key_S,
		Key_T,
		Key_U,
		Key_V,
		Key_W,
		Key_X,
		Key_Y,
		Key_Z,
		Key_LeftBracket,
		Key_Backslash,
		Key_RightBracket,
		Key_GraveAccent,
		Key_World_1,
		Key_World_2,
		Key_Escape,
		Key_Enter,
		Key_Tab,
		Key_Backspace,
		Key_Insert,
		Key_Delete,
		Key_Right,
		Key_Left,
		Key_Down,
		Key_Up,
		Key_PageUp,
		Key_PageDown,
		Key_Home,
		Key_End,
		Key_CapsLock,
		Key_ScrollLock,
		Key_NumLock,
		Key_PrintScreen,
		Key_Pause,
		Key_F1,
		Key_F2,
		Key_F3,
		Key_F4,
		Key_F5,
		Key_F6,
		Key_F7,
		Key_F8,
		Key_F9,
		Key_F10,
		Key_F11,
		Key_F12,
		Key_F13,
		Key_F14,
		Key_F15,
		Key_F16,
		Key_F17,
		Key_F18,
		Key_F19,
		Key_F20,
		Key_F21,
		Key_F22,
		Key_F23,
		Key_F24,
		Key_F25,
		Key_Keypad_0,
		Key_Keypad_1,
		Key_Keypad_2,
		Key_Keypad_3,
		Key_Keypad_4,
		Key_Keypad_5,
		Key_Keypad_6,
		Key_Keypad_7,
		Key_Keypad_8,
		Key_Keypad_9,
		Key_Keypad_Decimal,
		Key_Keypad_Divide,
		Key_Keypad_Multiply,
		Key_Keypad_Subtract,
		Key_Keypad_Add,
		Key_Keypad_Enter,
		Key_Keypad_Equal,
		Key_LeftShift,
		Key_LeftControl,
		Key_LeftAlt,
		Key_LeftSuper,
		Key_RightShift,
		Key_RightControl,
		Key_RightAlt,
		Key_RightSuper,
		Key_Menu,
		MaxButtons
	};

	enum ModifierKey : std::uint32_t
	{
		Shift = 0x0001,
		Control = 0x0002,
		Alt = 0x0004,
		Super = 0x0008
	};
}
